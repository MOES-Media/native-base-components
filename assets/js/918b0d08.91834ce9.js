"use strict";(self.webpackChunk_moes_media_native_base_components_docs=self.webpackChunk_moes_media_native_base_components_docs||[]).push([[313],{876:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(2784);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=i,g=c["".concat(p,".").concat(u)]||c[u]||d[u]||o;return n?a.createElement(g,r(r({ref:t},m),{},{components:n})):a.createElement(g,r({ref:t},m))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<o;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1465:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(7896),i=(n(2784),n(876));const o={sidebar_position:2},r="ImageSlider",l={unversionedId:"components/image-slider",id:"components/image-slider",title:"ImageSlider",description:"The ImageSlider component is a customizable image slider that allows you to display a collection of images with optional pagination. It is built using native-base, react, and react-native and can be used on both web and mobile.",source:"@site/docs/components/image-slider.md",sourceDirName:"components",slug:"/components/image-slider",permalink:"/native-base-components/docs/components/image-slider",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/components/image-slider.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Typography",permalink:"/native-base-components/docs/components/typography"}},p={},s=[{value:"Importing the Component",id:"importing-the-component",level:2},{value:"Props",id:"props",level:2},{value:"Example Usage",id:"example-usage",level:2}],m={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"imageslider"},"ImageSlider"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageSlider")," component is a customizable image slider that allows you to display a collection of images with optional pagination. It is built using ",(0,i.kt)("inlineCode",{parentName:"p"},"native-base"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"react"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"react-native")," and can be used on both web and mobile."),(0,i.kt)("h2",{id:"importing-the-component"},"Importing the Component"),(0,i.kt)("p",null,"To use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageSlider")," component in your project, import it as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import ImageSlider from '@moes-media/native-base-components-image-slider';\n")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageSlider")," component accepts the following props:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"data")," (required): An array of objects representing the images to be displayed in the slider. Each object should have a ",(0,i.kt)("inlineCode",{parentName:"p"},"src")," property that contains the image source and an optional ",(0,i.kt)("inlineCode",{parentName:"p"},"caption")," property for the image caption.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"separatorWidth")," (optional): The width of the separator between each image in the slider. If not provided, the default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"0"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"withPagination")," (optional): A boolean value indicating whether to display pagination indicators at the bottom of the slider. If set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", pagination indicators will be shown. The default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"width")," (optional): The width of the slider. If not provided, the default width will be determined based on the device's screen dimensions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"autoPlay")," (optional): A boolean value indicating whether the slider should automatically transition to the next slide. If set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),", the slider will automatically play. The default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"false"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"autoPlayInterval")," (optional): The time interval (in milliseconds) between each automatic slide transition. This prop is only applicable when ",(0,i.kt)("inlineCode",{parentName:"p"},"autoPlay")," is set to ",(0,i.kt)("inlineCode",{parentName:"p"},"true"),". If not provided, the default interval is ",(0,i.kt)("inlineCode",{parentName:"p"},"3000")," milliseconds."))),(0,i.kt)("h2",{id:"example-usage"},"Example Usage"),(0,i.kt)("p",null,"Here's an example of how you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"ImageSlider")," component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const images = [\n  { src: 'path/to/image1.jpg', caption: 'Image 1' },\n  { src: 'path/to/image2.jpg', caption: 'Image 2' },\n  { src: 'path/to/image3.jpg', caption: 'Image 3' },\n];\n\nfunction MyComponent() {\n  return (\n      <ImageSlider\n        data={images}\n        separatorWidth={10}\n        withPagination={true}\n        width={350}\n        autoPlay={true}\n        autoPlayInterval={5000}\n      />\n  );\n}\n")))}d.isMDXComponent=!0}}]);