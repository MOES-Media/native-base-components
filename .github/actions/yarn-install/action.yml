name: Yarn Install With Cache Enabled
description: Sets up caching for yarn and runs yarn install
inputs:
  GITHUB_TOKEN:
    description: Github token, needed for enabling private repo's
    required: true

runs:
  using: composite

  steps:
    - name: ‚öôÔ∏è Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn
        registry-url: https://npm.pkg.github.com
        scope: moes-media
    - name: ‚öôÔ∏è Enable Corepack
      shell: bash
      run: corepack enable
    - name: ‚öôÔ∏è Expose yarn config as "$GITHUB_OUTPUT"
      id: yarn-config
      shell: bash
      env:
        YARN_ENABLE_GLOBAL_CACHE: 'false'
      run: |
        echo "CACHE_FOLDER=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        echo "CURRENT_NODE_VERSION="node-$(node --version)"" >> $GITHUB_OUTPUT
        echo "CURRENT_BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's,/,-,g')" >> $GITHUB_OUTPUT
    
    - name: üîí Set npm-auth-token
      shell: bash
      run: |
        yarn config set npmScopes[moes-media].npmAuthToken ${{ inputs.GITHUB_TOKEN }}
    
    - name: ‚ôªÔ∏è Restore yarn cache
      uses: actions/cache@v3
      id: yarn-download-cache
      with:
        path: |
          node_modules
          apps/*/node_modules
          scripts/*/node_modules
          packages/*/node_modules
          .yarn/cache
          .yarn/ci-cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: üì• Install dependencies
      shell: bash
      run: yarn install --immutable --inline-builds
      env:
        YARN_ENABLE_GLOBAL_CACHE: 'false' 
        YARN_NM_MODE: 'hardlinks-local' 
        YARN_INSTALL_STATE_PATH: '.yarn/ci-cache/install-state.gz' 
        HUSKY: '0' 
    
    - name: üîí Unset npm-auth-token
      shell: bash
      run: |
        yarn config unset npmScopes[moes-media].npmAuthToken
    